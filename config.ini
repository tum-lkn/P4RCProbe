###Overall Configuration Options
#Used OpenFlow Version for this Simulation; int[1]
config.openflow_version = 1
#Number of emulated Switches - can be overwritten via commandLine option #2; will automatically be overwritten, if graphml-file is used; int [1,inf]
config.switchCount = 10
#Number of Threads to use for the ofSwitches; int [1, inf]
config.threadCount = 4
#Controller Address; ip address
config.controllerAddress = localhost
#Controller Port; int [1,inf]
config.controllerPort = 6633
#DPID of the first emulated Switch; int [1,inf]
config.startDpid = 1
#Total Simulation Time in ms; int [1,inf]
config.simTime = 60000
#Delay between ofSwitch initialization and BenchStart in ms; int [1,inf]
config.startDelay = 6000
#Delay between end of SimTime and so in ms; int [1,inf]
config.stopDelay = 500
#Topology Emulation; [true/false]
config.hasTopology = true
#Graphml Topology; [true/false]
config.hasGraphml = false
#Name of graphml file
config.graphml = Aarnet.graphml
#Flag if each ofSwitch should check for individual Settings in "ofSwitch.ini"; [true/false]
config.checkForIndividualSwitchSettings = false

###Switch Specific Configuration Options
#Number of Ports pers emulated ofSwitch; int [1,inf]
switchConfig.portCountPerSwitch = 4
#Number of Buffers pers ofSwitch; int [1,inf]
switchConfig.buffersPerSwitch = 256
#Flag if sending is enabled; [true/false]
switchConfig.sendFlag = true
#Flag if Nagles TCP Algorthm should be disabled for every Connection; [true/false]
switchConfig.disableNagle = true
#Flag: [false]: each Message should be sent individually or [true]:every queued packet at once; [true/false]
switchConfig.batchSending = true
#Size of the Table int[1,inf]
switchConfig.flowTableSize = 128
#Randomize the requested FlowStatistics; [true/false]
switchConfig.randomizeStats = true

###TrafficGenerator Specific Configuration Options
#PayloadScenario; currently unused
trafficGenConfig.scenario = TCPSYN/PCAP
#Flag of the ARPing - only available when 'config.hasTopology = true'; [true/false]
trafficGenConfig.arpEnabled = true
#In each interation the ofSwitches queues should be filled to this value; int[1,inf]
trafficGenConfig.fillThreshold = 500
#Type of InterArrivalTime of PacketGeneration Events; [0=static,1=random after Distribution]
trafficGenConfig.iatType = 0
#InterArrivalTime of PacketGenration Events in ms; int[1,inf]
trafficGenConfig.IAT = 100
#Number of Generationloops for each PacketGeneration Event, standard is 1; int[1,inf]
trafficGenConfig.countPerEvent = 1
#always use the same Payload instead of a random generated payload; [true/false]
trafficGenConfig.staticPayload = false
#Only Use TCPSyns with 'valid', emulated Targets; only available when Topologyemulation and arp enabled; [true/false]
trafficGenConfig.onlyTopologyPayloads = true
#Only One Host Per Switch (standard: one host per free Switch Port; [true/false
trafficGenConfig.onlyOneHostPerSwitch = true



#MAC Generator Type; currently supported: [SERIAL,RANDOM]
trafficGenConfig.generatorTypeMAC = SERIAL
#IP Generator Type; currently supported: [SERIAL,RANDOM]
trafficGenConfig.generatorTypeIP = SERIAL
#TCP Port Generator Type; currently supported: [SERIAL,RANDOM]
trafficGenConfig.generatorTypePort = SERIAL
#Used Distribution for random IAT values, currently supported distributions: [Normal(Default),ChiSquared,Exponential,Gamma,Poisson]
trafficGenConfig.iatDistribution = Normal
#Parameter1 for the Set Distribution, e.g. mean for NormalDistribution
trafficGenConfig.iatDistributionParamter1 = 100
#Parameter2 for the Set Distribution, e.g. standarddeviation for NormalDistribution
trafficGenConfig.iatDistributionParamter2 = 1


###StatisticModules Specific Configuration Options
#Used Statistic Modules for this Simulation,seperated by ","(comma); currently Supported: [PPS,RTT,CPU,RAM,TSL,QLM]
#CPU and RAM need SNMP Server on Controller Host
statsConfig.modules=PPS,RTT,TSL,QLM
#statsConfig.modules=PPS,CPU,RAM,TSL,QLM